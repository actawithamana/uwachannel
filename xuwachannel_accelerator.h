// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef XUWACHANNEL_ACCELERATOR_H
#define XUWACHANNEL_ACCELERATOR_H

#ifdef __cplusplus
extern "C" {
#endif

/***************************** Include Files *********************************/
#ifndef __linux__
#include "xil_types.h"
#include "xil_assert.h"
#include "xstatus.h"
#include "xil_io.h"
#else
#include <stdint.h>
#include <assert.h>
#include <dirent.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/mman.h>
#include <unistd.h>
#include <stddef.h>
#endif
#include "xuwachannel_accelerator_hw.h"

/**************************** Type Definitions ******************************/
#ifdef __linux__
typedef uint8_t u8;
typedef uint16_t u16;
typedef uint32_t u32;
#else
typedef struct {
    u16 DeviceId;
    u32 Uwachannel_ctrl_BaseAddress;
} XUwachannel_accelerator_Config;
#endif

typedef struct {
    u32 Uwachannel_ctrl_BaseAddress;
    u32 IsReady;
} XUwachannel_accelerator;

/***************** Macros (Inline Functions) Definitions *********************/
#ifndef __linux__
#define XUwachannel_accelerator_WriteReg(BaseAddress, RegOffset, Data) \
    Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))
#define XUwachannel_accelerator_ReadReg(BaseAddress, RegOffset) \
    Xil_In32((BaseAddress) + (RegOffset))
#else
#define XUwachannel_accelerator_WriteReg(BaseAddress, RegOffset, Data) \
    *(volatile u32*)((BaseAddress) + (RegOffset)) = (u32)(Data)
#define XUwachannel_accelerator_ReadReg(BaseAddress, RegOffset) \
    *(volatile u32*)((BaseAddress) + (RegOffset))

#define Xil_AssertVoid(expr)    assert(expr)
#define Xil_AssertNonvoid(expr) assert(expr)

#define XST_SUCCESS             0
#define XST_DEVICE_NOT_FOUND    2
#define XST_OPEN_DEVICE_FAILED  3
#define XIL_COMPONENT_IS_READY  1
#endif

/************************** Function Prototypes *****************************/
#ifndef __linux__
int XUwachannel_accelerator_Initialize(XUwachannel_accelerator *InstancePtr, u16 DeviceId);
XUwachannel_accelerator_Config* XUwachannel_accelerator_LookupConfig(u16 DeviceId);
int XUwachannel_accelerator_CfgInitialize(XUwachannel_accelerator *InstancePtr, XUwachannel_accelerator_Config *ConfigPtr);
#else
int XUwachannel_accelerator_Initialize(XUwachannel_accelerator *InstancePtr, const char* InstanceName);
int XUwachannel_accelerator_Release(XUwachannel_accelerator *InstancePtr);
#endif

void XUwachannel_accelerator_Start(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_IsDone(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_IsIdle(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_IsReady(XUwachannel_accelerator *InstancePtr);
void XUwachannel_accelerator_EnableAutoRestart(XUwachannel_accelerator *InstancePtr);
void XUwachannel_accelerator_DisableAutoRestart(XUwachannel_accelerator *InstancePtr);

u32 XUwachannel_accelerator_Get_c_re_1_0_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_0_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_0_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_0_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_0_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_re_1_0_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_re_1_0_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_re_1_0_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_re_1_0_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_re_1_1_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_1_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_1_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_1_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_1_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_re_1_1_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_re_1_1_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_re_1_1_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_re_1_1_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_re_1_2_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_2_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_2_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_2_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_2_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_re_1_2_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_re_1_2_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_re_1_2_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_re_1_2_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_re_1_3_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_3_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_3_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_3_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_1_3_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_re_1_3_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_re_1_3_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_re_1_3_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_re_1_3_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_im_1_0_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_0_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_0_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_0_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_0_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_im_1_0_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_im_1_0_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_im_1_0_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_im_1_0_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_im_1_1_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_1_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_1_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_1_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_1_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_im_1_1_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_im_1_1_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_im_1_1_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_im_1_1_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_im_1_2_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_2_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_2_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_2_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_2_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_im_1_2_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_im_1_2_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_im_1_2_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_im_1_2_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_im_1_3_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_3_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_3_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_3_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_1_3_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_im_1_3_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_im_1_3_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_im_1_3_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_im_1_3_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_re_2_0_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_0_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_0_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_0_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_0_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_re_2_0_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_re_2_0_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_re_2_0_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_re_2_0_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_re_2_1_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_1_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_1_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_1_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_1_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_re_2_1_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_re_2_1_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_re_2_1_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_re_2_1_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_re_2_2_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_2_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_2_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_2_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_2_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_re_2_2_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_re_2_2_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_re_2_2_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_re_2_2_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_re_2_3_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_3_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_3_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_3_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_re_2_3_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_re_2_3_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_re_2_3_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_re_2_3_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_re_2_3_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_im_2_0_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_0_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_0_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_0_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_0_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_im_2_0_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_im_2_0_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_im_2_0_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_im_2_0_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_im_2_1_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_1_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_1_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_1_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_1_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_im_2_1_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_im_2_1_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_im_2_1_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_im_2_1_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_im_2_2_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_2_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_2_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_2_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_2_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_im_2_2_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_im_2_2_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_im_2_2_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_im_2_2_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Get_c_im_2_3_V_BaseAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_3_V_HighAddress(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_3_V_TotalBytes(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_3_V_BitWidth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Get_c_im_2_3_V_Depth(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_Write_c_im_2_3_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Read_c_im_2_3_V_Words(XUwachannel_accelerator *InstancePtr, int offset, int *data, int length);
u32 XUwachannel_accelerator_Write_c_im_2_3_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);
u32 XUwachannel_accelerator_Read_c_im_2_3_V_Bytes(XUwachannel_accelerator *InstancePtr, int offset, char *data, int length);

void XUwachannel_accelerator_InterruptGlobalEnable(XUwachannel_accelerator *InstancePtr);
void XUwachannel_accelerator_InterruptGlobalDisable(XUwachannel_accelerator *InstancePtr);
void XUwachannel_accelerator_InterruptEnable(XUwachannel_accelerator *InstancePtr, u32 Mask);
void XUwachannel_accelerator_InterruptDisable(XUwachannel_accelerator *InstancePtr, u32 Mask);
void XUwachannel_accelerator_InterruptClear(XUwachannel_accelerator *InstancePtr, u32 Mask);
u32 XUwachannel_accelerator_InterruptGetEnabled(XUwachannel_accelerator *InstancePtr);
u32 XUwachannel_accelerator_InterruptGetStatus(XUwachannel_accelerator *InstancePtr);

#ifdef __cplusplus
}
#endif

#endif
