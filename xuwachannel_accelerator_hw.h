// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// uwachannel_ctrl
// 0x0000 : Control signals
//          bit 0  - ap_start (Read/Write/COH)
//          bit 1  - ap_done (Read/COR)
//          bit 2  - ap_idle (Read)
//          bit 3  - ap_ready (Read)
//          bit 7  - auto_restart (Read/Write)
//          others - reserved
// 0x0004 : Global Interrupt Enable Register
//          bit 0  - Global Interrupt Enable (Read/Write)
//          others - reserved
// 0x0008 : IP Interrupt Enable Register (Read/Write)
//          bit 0  - Channel 0 (ap_done)
//          bit 1  - Channel 1 (ap_ready)
//          others - reserved
// 0x000c : IP Interrupt Status Register (Read/TOW)
//          bit 0  - Channel 0 (ap_done)
//          bit 1  - Channel 1 (ap_ready)
//          others - reserved
// 0x0800 ~
// 0x0fff : Memory 'c_re_1_0_V' (360 * 32b)
//          Word n : bit [31:0] - c_re_1_0_V[n]
// 0x1000 ~
// 0x17ff : Memory 'c_re_1_1_V' (360 * 32b)
//          Word n : bit [31:0] - c_re_1_1_V[n]
// 0x1800 ~
// 0x1fff : Memory 'c_re_1_2_V' (360 * 32b)
//          Word n : bit [31:0] - c_re_1_2_V[n]
// 0x2000 ~
// 0x27ff : Memory 'c_re_1_3_V' (360 * 32b)
//          Word n : bit [31:0] - c_re_1_3_V[n]
// 0x2800 ~
// 0x2fff : Memory 'c_im_1_0_V' (360 * 32b)
//          Word n : bit [31:0] - c_im_1_0_V[n]
// 0x3000 ~
// 0x37ff : Memory 'c_im_1_1_V' (360 * 32b)
//          Word n : bit [31:0] - c_im_1_1_V[n]
// 0x3800 ~
// 0x3fff : Memory 'c_im_1_2_V' (360 * 32b)
//          Word n : bit [31:0] - c_im_1_2_V[n]
// 0x4000 ~
// 0x47ff : Memory 'c_im_1_3_V' (360 * 32b)
//          Word n : bit [31:0] - c_im_1_3_V[n]
// 0x4800 ~
// 0x4fff : Memory 'c_re_2_0_V' (360 * 32b)
//          Word n : bit [31:0] - c_re_2_0_V[n]
// 0x5000 ~
// 0x57ff : Memory 'c_re_2_1_V' (360 * 32b)
//          Word n : bit [31:0] - c_re_2_1_V[n]
// 0x5800 ~
// 0x5fff : Memory 'c_re_2_2_V' (360 * 32b)
//          Word n : bit [31:0] - c_re_2_2_V[n]
// 0x6000 ~
// 0x67ff : Memory 'c_re_2_3_V' (360 * 32b)
//          Word n : bit [31:0] - c_re_2_3_V[n]
// 0x6800 ~
// 0x6fff : Memory 'c_im_2_0_V' (360 * 32b)
//          Word n : bit [31:0] - c_im_2_0_V[n]
// 0x7000 ~
// 0x77ff : Memory 'c_im_2_1_V' (360 * 32b)
//          Word n : bit [31:0] - c_im_2_1_V[n]
// 0x7800 ~
// 0x7fff : Memory 'c_im_2_2_V' (360 * 32b)
//          Word n : bit [31:0] - c_im_2_2_V[n]
// 0x8000 ~
// 0x87ff : Memory 'c_im_2_3_V' (360 * 32b)
//          Word n : bit [31:0] - c_im_2_3_V[n]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_AP_CTRL         0x0000
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_GIE             0x0004
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_IER             0x0008
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_ISR             0x000c
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_1_0_V_BASE 0x0800
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_1_0_V_HIGH 0x0fff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_RE_1_0_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_RE_1_0_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_1_1_V_BASE 0x1000
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_1_1_V_HIGH 0x17ff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_RE_1_1_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_RE_1_1_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_1_2_V_BASE 0x1800
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_1_2_V_HIGH 0x1fff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_RE_1_2_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_RE_1_2_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_1_3_V_BASE 0x2000
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_1_3_V_HIGH 0x27ff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_RE_1_3_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_RE_1_3_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_1_0_V_BASE 0x2800
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_1_0_V_HIGH 0x2fff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_IM_1_0_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_IM_1_0_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_1_1_V_BASE 0x3000
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_1_1_V_HIGH 0x37ff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_IM_1_1_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_IM_1_1_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_1_2_V_BASE 0x3800
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_1_2_V_HIGH 0x3fff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_IM_1_2_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_IM_1_2_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_1_3_V_BASE 0x4000
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_1_3_V_HIGH 0x47ff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_IM_1_3_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_IM_1_3_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_2_0_V_BASE 0x4800
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_2_0_V_HIGH 0x4fff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_RE_2_0_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_RE_2_0_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_2_1_V_BASE 0x5000
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_2_1_V_HIGH 0x57ff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_RE_2_1_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_RE_2_1_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_2_2_V_BASE 0x5800
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_2_2_V_HIGH 0x5fff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_RE_2_2_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_RE_2_2_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_2_3_V_BASE 0x6000
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_RE_2_3_V_HIGH 0x67ff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_RE_2_3_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_RE_2_3_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_2_0_V_BASE 0x6800
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_2_0_V_HIGH 0x6fff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_IM_2_0_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_IM_2_0_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_2_1_V_BASE 0x7000
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_2_1_V_HIGH 0x77ff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_IM_2_1_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_IM_2_1_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_2_2_V_BASE 0x7800
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_2_2_V_HIGH 0x7fff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_IM_2_2_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_IM_2_2_V     360
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_2_3_V_BASE 0x8000
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_ADDR_C_IM_2_3_V_HIGH 0x87ff
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_WIDTH_C_IM_2_3_V     32
#define XUWACHANNEL_ACCELERATOR_UWACHANNEL_CTRL_DEPTH_C_IM_2_3_V     360

